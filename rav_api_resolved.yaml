openapi: 3.0.0
info:
  title: RAV API
  description: RAV API
  contact:
    email: name@mail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
servers:
- url: https://virtserver.swaggerhub.com/myRAVorg/RAV_latest/1.0.0
tags:
- name: developers
  description: Operations available to regular developers
paths:
  /configuration/{expID}:
    get:
      tags:
      - developers
      summary: get the configuration for an experiment
      description: |
        Returns the current configuration of the RAV module
      operationId: getConfigurationExp
      parameters:
      - name: expID
        in: path
        description: |
          Identifier of experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS,
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
    post:
      tags:
      - developers
      summary: adds configuration for an experiment
      description: Sets a new configuration on the RAV module
      operationId: setConfigurationExp
      parameters:
      - name: expID
        in: path
        description: |
          Identifier of experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: New configuration for the module
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configuration'
        required: true
      responses:
        "200":
          description: configuration received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
        "400":
          description: malformed JSON content
        "401":
          description: unsupported request
  /queue:
    get:
      tags:
      - developers
      summary: dump list of active RAV instances
      description: |
        Returns the list of all the rav instances
      operationId: getResultsCommand
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationResultsList'
  /queue/{expID}:
    get:
      tags:
      - developers
      summary: dump results for specific experiment
      description: |
        Returns the results of the specific experiment
      operationId: getExpResults
      parameters:
      - name: expID
        in: path
        description: |
          Identifier of experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationResultsInstance'
  /terminate/{expID}:
    get:
      tags:
      - developers
      summary: terminate current step of experiment
      description: |
        Terminates the current step of the experiment
      operationId: terminateCurrentStep
      parameters:
      - name: expID
        in: path
        description: |
          Identifier of experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commandResponse'
  /step/{expID}:
    get:
      tags:
      - developers
      summary: add step to experiment
      description: |
        Adds additional step to experiment
      operationId: addStepToExp
      parameters:
      - name: expID
        in: path
        description: |
          Identifier of experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commandResponse'
components:
  schemas:
    configuration:
      required:
      - publish
      - topics
      type: object
      properties:
        topics:
          type: array
          items:
            $ref: '#/components/schemas/topic'
        publish:
          type: array
          items:
            $ref: '#/components/schemas/publishtopic'
    topic:
      required:
      - brokerAddr
      - metric
      - topic
      type: object
      properties:
        brokerAddr:
          type: string
          example: 127.0.0.1:9092
        topic:
          type: string
          example: metric_1_topic
        metric:
          type: string
          example: metric_1_name
    publishtopic:
      required:
      - brokerAddr
      - kpi
      - topic
      type: object
      properties:
        brokerAddr:
          type: string
          example: 127.0.0.1:9092
        topic:
          type: string
          example: output_kpi_1_topic
        kpi:
          type: string
          example: output_kpi_1_name
    validationResultsList:
      type: array
      items:
        $ref: '#/components/schemas/validationResultsInstance'
    validationResultsInstance:
      type: object
      properties:
        expID:
          type: string
          example: 123af1rcxhauq13-13r142f1-13f13f-121e
        tcID:
          type: string
          example: effect of latency on deviation
        configuration:
          $ref: '#/components/schemas/configuration'
        validation:
          type: array
          items:
            $ref: '#/components/schemas/validationResults'
    validationResults:
      type: object
      additionalProperties: true
    commandResponse:
      type: object
      properties:
        expID:
          type: string
          example: 123af1rcxhauq13-13r142f1-13f13f-121e
        status:
          type: string
          example: running
